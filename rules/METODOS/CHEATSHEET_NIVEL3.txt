╔══════════════════════════════════════════════════════════════════════════════╗
║                    NIVEL 3: CHEATSHEET DE REFERENCIA RÁPIDA                  ║
║                        416 Métodos → 30 Preguntas                            ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│ CÓDIGOS DE ARCHIVO                                                           │
├──────────────────────────────────────────────────────────────────────────────┤
│ PP  policy_processor.py               32 métodos (7.7%)                      │
│ CD  contradiction_deteccion.py        62 métodos (14.9%)                     │
│ FV  financiero_viabilidad_tablas.py   65 métodos (15.6%)                     │
│ DB  dereck_beach.py                   99 métodos (23.8%) ★ EL MÁS USADO     │
│ RA  report_assembly.py                43 métodos (10.3%)                     │
│ EP  embedding_policy.py               36 métodos (8.7%)                      │
│ A1  Analyzer_one.py                   34 métodos (8.2%)                      │
│ TC  teoria_cambio.py                  30 métodos (7.2%)                      │
│ SC  semantic_chunking_policy.py       15 métodos (3.6%)                      │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ TIPOS DE MÉTODO                                                              │
├──────────────────────────────────────────────────────────────────────────────┤
│ E   Extracción       → Extrae información del texto                          │
│ V   Validación       → Valida/verifica consistencia                          │
│ T   Transformación   → Transforma/normaliza datos                            │
│ C   Cálculo          → Calcula métricas/scores                               │
│ O   Orquestación     → Coordina otros métodos                                │
│ R   Reporte          → Genera reportes/outputs                               │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ PRIORIDAD                                                                    │
├──────────────────────────────────────────────────────────────────────────────┤
│ 3   ★  Crítico        → Sin él, el sistema no funciona                       │
│ 2   ◆  Importante     → Pérdida significativa de capacidad                   │
│ 1   ○  Complementario → Mejora la calidad del resultado                      │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ DIMENSIONES (6 total, 5 preguntas cada una)                                 │
├──────────────────────────────────────────────────────────────────────────────┤
│ D1  Diagnóstico y Consistencia Inicial                   80 métodos (19.2%) │
│     Q1: Líneas Base y Brechas (18m)                                          │
│     Q2: Normalización y Fuentes (12m)                                        │
│     Q3: Asignación de Recursos (22m)                                         │
│     Q4: Capacidad Institucional (16m)                                        │
│     Q5: Restricciones Temporales (14m)                                       │
│                                                                               │
│ D2  Diseño de Actividades y Coherencia                  107 métodos (25.7%) │
│     Q1: Formato Tabular (20m)                                                │
│     Q2: Causalidad de Actividades (25m)                                      │
│     Q3: Responsables (18m)                                                   │
│     Q4: Cuantificación (21m)                                                 │
│     Q5: Eslabón Diagnóstico-Actividades (23m)                                │
│                                                                               │
│ D3  Productos, Indicadores y Especificidad              101 métodos (24.3%) │
│     Q1: Indicadores de Producto (19m)                                        │
│     Q2: Cuantificación (20m)                                                 │
│     Q3: Responsables (17m)                                                   │
│     Q4: Plazos (19m)                                                         │
│     Q5: Eslabón Producto-Resultado (26m)                                     │
│                                                                               │
│ D4  Resultados, Supuestos y Alineación                   94 métodos (22.6%) │
│     Q1: Indicadores de Resultado (18m)                                       │
│     Q2: Cadena Causal y Supuestos (24m)                                      │
│     Q3: Justificación de Ambición (20m)                                      │
│     Q4: Población Objetivo (15m)                                             │
│     Q5: Alineación con Objetivos Superiores (17m)                            │
│                                                                               │
│ D5  Impactos y Sostenibilidad                            91 métodos (21.9%) │
│     Q1: Indicadores de Impacto (17m)                                         │
│     Q2: Eslabón Resultado-Impacto (25m)                                      │
│     Q3: Evidencia de Causalidad (19m)                                        │
│     Q4: Plazos de Impacto (15m)                                              │
│     Q5: Sostenibilidad Financiera (15m)                                      │
│                                                                               │
│ D6  Causalidad, Coherencia Global                       155 métodos (37.3%) │
│     Q1: Integridad de Teoría de Cambio (32m) ★ LA MÁS COMPLEJA              │
│     Q2: Proporcionalidad Anti-Milagro (28m)                                  │
│     Q3: Inconsistencias - Ruta 1 (22m)                                       │
│     Q4: Adaptación - Ruta 2 (26m)                                            │
│     Q5: Contextualización y Enfoque Diferencial (24m)                        │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ CARACTERÍSTICAS ESPECIALES                                                   │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│ ⚙️  SISTEMA BICAMERAL (D6-Q3 y D6-Q4)                                         │
│     Dos rutas paralelas de resolución:                                       │
│     • Ruta 1: Detección Local                                                │
│       CD.PolicyContradictionDetector._suggest_resolutions                    │
│     • Ruta 2: Inferencia Estructural                                         │
│       TC.TeoriaCambio._generar_sugerencias_internas                          │
│                                                                               │
│ 🚫 VALIDACIÓN ANTI-MILAGRO (D6-Q2)                                           │
│     Detecta saltos inverosímiles en la cadena causal:                        │
│     • enlaces_proporcionales (proporcional_a, razonable)                     │
│     • sin_saltos (gradual, incremental, paso_a_paso)                         │
│     • no_milagros (factible, posible, alcanzable)                            │
│                                                                               │
│ 🔬 DEREK BEACH PROCESS TRACING (100% integrado)                              │
│     Cuatro tipos de tests evidenciales:                                      │
│     • Hoop Test          → Necesario pero NO suficiente                      │
│     • Smoking Gun Test   → Suficiente pero NO necesario                      │
│     • Doubly Decisive    → Necesario Y suficiente                            │
│     • Straw in Wind      → Ni necesario ni suficiente                        │
│                                                                               │
│ 🏗️  FRAMEWORK CDAF COMPLETO                                                  │
│     9 componentes en dereck_beach.py:                                        │
│     • ConfigLoader: Gestión configuración bayesiana                          │
│     • PDFProcessor: Extracción texto/tablas                                  │
│     • CausalExtractor: Jerarquía causal (14 métodos)                         │
│     • MechanismPartExtractor: Entidad-actividad                              │
│     • BayesianMechanismInference: Inferencia (9 métodos)                     │
│     • CausalInferenceSetup: Dinámica y puntos de falla                       │
│     • OperationalizationAuditor: Trazabilidad                                │
│     • FinancialAuditor: Trazabilidad financiera                              │
│     • CDAFFramework: Orquestador + Validación DNP                            │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ EJEMPLO DE USO EN JSON                                                       │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│   {                                                                           │
│     "q": "D1-Q1",                          ← ID de pregunta                  │
│     "t": "Líneas Base y Brechas",          ← Título                          │
│     "m": 18,                                ← Total de métodos               │
│     "p": [                                  ← Paquetes de métodos            │
│       {                                                                       │
│         "f": "PP",                          ← Código de archivo              │
│         "c": "IndustrialPolicyProcessor",   ← Clase                          │
│         "m": ["process", "_match_patterns"], ← Lista de métodos             │
│         "t": ["O", "E"],                    ← Tipos (Orquest, Extract)       │
│         "pr": [3, 3]                        ← Prioridades (★ Crítico)        │
│       }                                                                       │
│     ],                                                                        │
│     "flow": "PP.O → CD.E → PP.R"            ← Flujo de ejecución             │
│   }                                                                           │
│                                                                               │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ TOP 5 MÉTODOS MÁS REUTILIZADOS                                              │
├──────────────────────────────────────────────────────────────────────────────┤
│ 1. PP.IndustrialPolicyProcessor._match_patterns_in_sentences                 │
│    Usado en ~25 preguntas (83%)                                              │
│                                                                               │
│ 2. PP.BayesianEvidenceScorer.compute_evidence_score                          │
│    Usado en ~24 preguntas (80%)                                              │
│                                                                               │
│ 3. CD.PolicyContradictionDetector._extract_quantitative_claims               │
│    Usado en ~15 preguntas (50%)                                              │
│                                                                               │
│ 4. PP.PolicyTextProcessor.segment_into_sentences                             │
│    Usado en ~23 preguntas (77%)                                              │
│                                                                               │
│ 5. CD.BayesianConfidenceCalculator.calculate_posterior                       │
│    Usado en ~20 preguntas (67%)                                              │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ FLUJOS TÍPICOS POR TIPO DE PREGUNTA                                         │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│ 📊 INDICADORES (D3-Q1, D4-Q1, D5-Q1)                                         │
│    PP.O → CD.E+T+V → FV.E+T+V → EP.E+C → PP.R                               │
│                                                                               │
│ 🔗 ESLABONES CAUSALES (D2-Q5, D3-Q5, D5-Q2)                                  │
│    PP.E+C → CD.E+T+V+C → DB.O → TC.T+V → A1.V                               │
│                                                                               │
│ 💰 RECURSOS/FINANCIERO (D1-Q3, D5-Q5)                                        │
│    PP.O → FV.E+C → CD.E+V+C → DB.O+C                                         │
│                                                                               │
│ ⏱️  TEMPORAL/PLAZOS (D1-Q5, D3-Q4, D5-Q4)                                    │
│    PP.E+T → CD.E → CD.V+T+C → A1.C+V                                         │
│                                                                               │
│ 🎯 CAUSALIDAD GLOBAL (D6-Q1, D6-Q2)                                          │
│    PP.O → TC.V → CD.T+C → DB.O → FV.T                                       │
│                                                                               │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ QUICK REFERENCE: COMANDOS PYTHON                                            │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                               │
│ # Cargar JSON                                                                │
│ import json                                                                  │
│ with open('metodos_completos_nivel3.json') as f:                             │
│     data = json.load(f)                                                      │
│                                                                               │
│ # Buscar pregunta                                                            │
│ question = next(q for d in data['dimensions']                                │
│                   for q in d['questions']                                    │
│                   if q['q'] == 'D1-Q1')                                      │
│                                                                               │
│ # Extraer métodos críticos                                                   │
│ critical = [m for p in question['p']                                         │
│               for i, pr in enumerate(p['pr'])                                │
│               if pr == 3]                                                    │
│                                                                               │
│ # Contar métodos por archivo                                                 │
│ from collections import Counter                                              │
│ counts = Counter(p['f'] for p in question['p'])                              │
│                                                                               │
└──────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│ ARCHIVOS INCLUIDOS                                                           │
├──────────────────────────────────────────────────────────────────────────────┤
│ 📄 metodos_completos_nivel3.json   → JSON completo con 416 métodos           │
│ 📖 README_NIVEL3.md                → Documentación completa                  │
│ 🐍 ejemplo_uso_nivel3.py           → Script Python con ejemplos             │
│ 📋 CHEATSHEET_NIVEL3.txt           → Esta referencia rápida                 │
└──────────────────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════════════╗
║                   OBJETIVO ALCANZADO: 95% UTILIZACIÓN ✅                     ║
║                      416 métodos → 30 preguntas genéricas                    ║
╚══════════════════════════════════════════════════════════════════════════════╝
