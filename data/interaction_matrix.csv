Component,File,Role,Methods,D1_Insumos,D2_Actividades,D3_Productos,D4_Resultados,D5_Impactos,D6_Causalidad,MICRO,MESO,MACRO,Primary_Interactions,Secondary_Interactions,Cross_Validation_With
PDETMunicipalPlanAnalyzer,financiero_viabilidad_tablas.py,producer,65,HIGH,MEDIUM,HIGH,HIGH,MEDIUM,HIGH,YES,YES,YES,"extract_tables,analyze_financial_feasibility,construct_causal_dag,identify_responsible_entities,estimate_causal_effects","sensitivity_analysis,generate_counterfactuals,calculate_quality_score","TeoriaCambio,CausalExtractor,FinancialAuditor"
SemanticAnalyzer,Analyzer_one.py,producer,34,HIGH,HIGH,HIGH,HIGH,LOW,MEDIUM,YES,YES,YES,"extract_semantic_cube,_classify_value_chain_link,_classify_policy_domain","_calculate_semantic_complexity,_vectorize_segments","PolicyAnalysisEmbedder"
PolicyContradictionDetector,contradiction_deteccion.py,producer,62,MEDIUM,HIGH,MEDIUM,MEDIUM,LOW,HIGH,YES,YES,YES,"detect,_detect_semantic_contradictions,_detect_numerical_inconsistencies,_detect_temporal_conflicts,_calculate_coherence_metrics","_calculate_global_semantic_coherence,_calculate_graph_fragmentation,_generate_resolution_recommendations","TemporalLogicVerifier,IndustrialPolicyProcessor"
PolicyAnalysisEmbedder,embedding_policy.py,producer,36,HIGH,HIGH,HIGH,HIGH,MEDIUM,HIGH,YES,YES,YES,"process_document,semantic_search,evaluate_policy_numerical_consistency","_embed_texts,_filter_by_pdq,generate_pdq_report","AdvancedSemanticChunker,BayesianNumericalAnalyzer,SemanticAnalyzer"
TeoriaCambio,teoria_cambio.py,producer,30,LOW,MEDIUM,MEDIUM,MEDIUM,MEDIUM,HIGH,YES,YES,YES,"construir_grafo_causal,validacion_completa,_validar_orden_causal,_encontrar_caminos_completos","_extraer_categorias,_generar_sugerencias_internas","AdvancedDAGValidator,PDETMunicipalPlanAnalyzer,CausalExtractor"
CDAFFramework,dereck_beach.py,producer,99,MEDIUM,HIGH,MEDIUM,HIGH,HIGH,HIGH,YES,YES,YES,"process_document,extract_causal_hierarchy,infer_mechanisms,trace_financial_allocation,bayesian_counterfactual_audit","classify_goal_dynamics,assign_probative_value,classify_test,apply_test_logic","BayesianMechanismInference,CausalExtractor,FinancialAuditor,OperationalizationAuditor,BeachEvidentialTest"
IndustrialPolicyProcessor,policy_processor.py,producer,32,HIGH,HIGH,HIGH,HIGH,MEDIUM,HIGH,YES,YES,YES,"process,_match_patterns_in_sentences,_compute_evidence_confidence,_extract_point_evidence","_analyze_causal_dimensions,_construct_evidence_bundle","BayesianEvidenceScorer,PolicyTextProcessor,PolicyContradictionDetector"
SemanticProcessor,semantic_chunking_policy.py,preprocessor,15,HIGH,HIGH,HIGH,HIGH,HIGH,HIGH,YES,YES,YES,"chunk_text,_detect_pdm_structure,_detect_table,_embed_batch","_detect_numerical_data,embed_single,integrate_evidence","PolicyAnalysisEmbedder,ReportAssembler"
ReportAssembler,report_assembly.py,aggregator,43,HIGH,HIGH,HIGH,HIGH,HIGH,HIGH,YES,YES,YES,"generate_micro_answer,generate_meso_cluster,generate_macro_convergence,_apply_scoring_modality,_score_type_a,_score_type_b,_score_type_c,_score_type_d,_score_type_e,_score_type_f","_calculate_confidence,_generate_explanation,_extract_evidence_excerpts,_perform_gap_analysis,_generate_strategic_recommendations","ALL_PRODUCERS"

Method,Source_File,Source_Class,Calls_To,Called_By,Evidence_Type,Scoring_Modality,Dimension_Coverage
extract_tables,financiero_viabilidad_tablas.py,PDETMunicipalPlanAnalyzer,"_clean_dataframe,_classify_tables,_deduplicate_tables,_reconstruct_fragmented_tables","analyze_municipal_plan,ReportAssembler._score_type_e",TABLE_EXTRACTION,TYPE_E,"D1,D3"
analyze_financial_feasibility,financiero_viabilidad_tablas.py,PDETMunicipalPlanAnalyzer,"_extract_financial_amounts,_analyze_funding_sources,_assess_financial_sustainability,_bayesian_risk_inference","analyze_municipal_plan,ReportAssembler._score_type_e",FINANCIAL_ANALYSIS,TYPE_E,"D1,D3"
construct_causal_dag,financiero_viabilidad_tablas.py,PDETMunicipalPlanAnalyzer,"_identify_causal_nodes,_identify_causal_edges,_refine_edge_probabilities,_break_cycles","analyze_municipal_plan,ReportAssembler._score_type_b",CAUSAL_DAG,TYPE_B,"D2,D4,D6"
estimate_causal_effects,financiero_viabilidad_tablas.py,PDETMunicipalPlanAnalyzer,"_estimate_effect_bayesian,_get_prior_effect,_identify_confounders","analyze_municipal_plan,ReportAssembler._score_type_f",CAUSAL_EFFECTS,TYPE_F,"D4,D6"
identify_responsible_entities,financiero_viabilidad_tablas.py,PDETMunicipalPlanAnalyzer,"_extract_entities_ner,_extract_entities_syntax,_extract_from_responsibility_tables,_consolidate_entities","analyze_municipal_plan,ReportAssembler._score_type_d",ENTITY_EXTRACTION,TYPE_D,"D1,D2"
sensitivity_analysis,financiero_viabilidad_tablas.py,PDETMunicipalPlanAnalyzer,"_compute_e_value,_compute_robustness_value,_interpret_sensitivity","analyze_municipal_plan,ReportAssembler._score_type_a",SENSITIVITY_ANALYSIS,TYPE_A,"D4,D5"
extract_semantic_cube,Analyzer_one.py,SemanticAnalyzer,"_empty_semantic_cube,_vectorize_segments,_process_segment,_classify_value_chain_link,_classify_policy_domain","analyze_document,ReportAssembler._score_type_d",SEMANTIC_ANALYSIS,TYPE_D,"D1,D2,D3,D4"
_detect_bottlenecks,Analyzer_one.py,PerformanceAnalyzer,"_calculate_throughput_metrics,_calculate_loss_functions","analyze_performance,ReportAssembler._score_type_a",BOTTLENECK_DETECTION,TYPE_A,"D2,D4"
chunk_text,semantic_chunking_policy.py,SemanticProcessor,"_detect_pdm_structure,_detect_table,_embed_batch","PolicyAnalysisEmbedder.process_document,ReportAssembler._generate_explanation",SEMANTIC_CHUNKING,TYPE_D,"D1,D2,D3,D4,D5,D6"
_detect_pdm_structure,semantic_chunking_policy.py,SemanticProcessor,"","SemanticProcessor.chunk_text",STRUCTURE_DETECTION,TYPE_D,"D1,D2,D3,D4,D5,D6"
_embed_batch,semantic_chunking_policy.py,SemanticProcessor,"","SemanticProcessor.chunk_text",BATCH_EMBEDDING,TYPE_D,"D1,D2,D3,D4,D5,D6"
integrate_evidence,semantic_chunking_policy.py,BayesianEvidenceIntegrator,"_similarity_to_probability,_compute_reliability_weights","ReportAssembler._score_type_f,ReportAssembler._calculate_confidence",BAYESIAN_INTEGRATION,TYPE_F,"D4,D5,D6"
detect,contradiction_deteccion.py,PolicyContradictionDetector,"_extract_policy_statements,_generate_embeddings,_build_knowledge_graph,_detect_semantic_contradictions,_detect_numerical_inconsistencies,_detect_temporal_conflicts,_detect_logical_incompatibilities,_detect_resource_conflicts","main,ReportAssembler._score_type_c",CONTRADICTION_DETECTION,TYPE_C,"D1,D2,D4,D6"
_calculate_global_semantic_coherence,contradiction_deteccion.py,PolicyContradictionDetector,"_calculate_similarity,_get_graph_statistics","detect,ReportAssembler._score_type_c",COHERENCE_METRIC,TYPE_C,"D2,D6"
verify_temporal_consistency,contradiction_deteccion.py,TemporalLogicVerifier,"_build_timeline,_parse_temporal_marker,_has_temporal_conflict,_check_deadline_constraints","detect,ReportAssembler._score_type_c",TEMPORAL_LOGIC,TYPE_C,"D2,D4"
calculate_posterior,contradiction_deteccion.py,BayesianConfidenceCalculator,NONE,"detect,ReportAssembler._score_type_a",BAYESIAN_POSTERIOR,TYPE_A,"ALL"
chunk_document,embedding_policy.py,AdvancedSemanticChunker,"_normalize_text,_recursive_split,_extract_sections,_extract_tables,_extract_lists,_infer_pdq_context","process_document,ReportAssembler._score_type_d",SEMANTIC_CHUNKING,TYPE_D,"D1,D2,D3"
evaluate_policy_metric,embedding_policy.py,BayesianNumericalAnalyzer,"_beta_binomial_posterior,_normal_normal_posterior,_classify_evidence_strength,_compute_coherence","process_document,ReportAssembler._score_type_a",BAYESIAN_NUMERICAL,TYPE_A,"D1,D3,D4"
process_document,embedding_policy.py,PolicyAnalysisEmbedder,"chunk_document,semantic_search,_embed_texts,_filter_by_pdq,_generate_query_from_pdq","main,ReportAssembler.generate_micro_answer",DOCUMENT_PROCESSING,TYPE_D,"ALL"
semantic_search,embedding_policy.py,PolicyAnalysisEmbedder,"_embed_texts,_filter_by_pdq,_apply_mmr,_cached_similarity","process_document,ReportAssembler._score_type_d",SEMANTIC_SEARCH,TYPE_D,"ALL"
construir_grafo_causal,teoria_cambio.py,TeoriaCambio,"_es_conexion_valida,_extraer_categorias,_validar_orden_causal,_encontrar_caminos_completos","validacion_completa,ReportAssembler._score_type_b",CAUSAL_GRAPH_BUILD,TYPE_B,"D6"
validacion_completa,teoria_cambio.py,TeoriaCambio,"construir_grafo_causal,_validar_orden_causal,_encontrar_caminos_completos,_generar_sugerencias_internas","main,ReportAssembler._score_type_b",CAUSAL_VALIDATION,TYPE_B,"D6"
calculate_acyclicity_pvalue,teoria_cambio.py,AdvancedDAGValidator,"_is_acyclic,_generate_subgraph,_perform_sensitivity_analysis_internal,_calculate_statistical_power","validacion_completa,ReportAssembler._score_type_b",DAG_STATISTICAL_VALIDATION,TYPE_B,"D6"
_encontrar_caminos_completos,teoria_cambio.py,TeoriaCambio,"_es_conexion_valida","validacion_completa,ReportAssembler._score_type_b",PATH_COMPLETENESS,TYPE_B,"D6"
extract_causal_hierarchy,dereck_beach.py,CausalExtractor,"_extract_goals,_parse_goal_context,_extract_causal_links,_calculate_semantic_distance,_calculate_type_transition_prior","process_document,ReportAssembler._score_type_b",CAUSAL_HIERARCHY,TYPE_B,"D2,D4,D5,D6"
infer_mechanisms,dereck_beach.py,BayesianMechanismInference,"_infer_single_mechanism,_extract_observations,_infer_mechanism_type,_test_sufficiency,_test_necessity","process_document,ReportAssembler._score_type_f",MECHANISM_INFERENCE,TYPE_F,"D2,D4,D5,D6"
classify_test,dereck_beach.py,BeachEvidentialTest,apply_test_logic,"infer_mechanisms,ReportAssembler._score_type_f",BEACH_TEST_CLASSIFICATION,TYPE_F,"D2,D4,D5,D6"
apply_test_logic,dereck_beach.py,BeachEvidentialTest,NONE,"classify_test,ReportAssembler._score_type_f",BEACH_TEST_LOGIC,TYPE_F,"D2,D4,D5,D6"
trace_financial_allocation,dereck_beach.py,FinancialAuditor,"_process_financial_table,_match_program_to_node,_perform_counterfactual_budget_check","process_document,ReportAssembler._score_type_e",FINANCIAL_TRACEABILITY,TYPE_E,"D1,D3"
bayesian_counterfactual_audit,dereck_beach.py,OperationalizationAuditor,"_build_normative_dag,_audit_direct_evidence,_audit_causal_implications,_audit_systemic_risk,_generate_optimal_remediations","process_document,ReportAssembler._score_type_a",COUNTERFACTUAL_AUDIT,TYPE_A,"D2,D4,D5"
classify_goal_dynamics,dereck_beach.py,CausalInferenceSetup,NONE,"process_document,ReportAssembler._score_type_d",GOAL_CLASSIFICATION,TYPE_D,"D4,D5"
assign_probative_value,dereck_beach.py,CausalInferenceSetup,NONE,"infer_mechanisms,ReportAssembler._score_type_f",PROBATIVE_VALUE,TYPE_F,"D4,D5,D6"
process,policy_processor.py,IndustrialPolicyProcessor,"_load_questionnaire,_compile_pattern_registry,_match_patterns_in_sentences,_compute_evidence_confidence,_construct_evidence_bundle","main,ReportAssembler.generate_micro_answer",PATTERN_PROCESSING,TYPE_D,"ALL"
_match_patterns_in_sentences,policy_processor.py,IndustrialPolicyProcessor,"segment_into_sentences,compile_pattern","process,ReportAssembler._score_type_d",PATTERN_MATCHING,TYPE_D,"ALL"
compute_evidence_score,policy_processor.py,BayesianEvidenceScorer,_calculate_shannon_entropy,"_compute_evidence_confidence,ReportAssembler._score_type_d",EVIDENCE_SCORING,TYPE_D,"ALL"
_analyze_causal_dimensions,policy_processor.py,IndustrialPolicyProcessor,"_extract_point_evidence,_match_patterns_in_sentences","process,ReportAssembler._score_type_d",CAUSAL_DIMENSION_ANALYSIS,TYPE_D,"D2,D4,D6"
generate_micro_answer,report_assembly.py,ReportAssembler,"_apply_scoring_modality,_extract_evidence_excerpts,_calculate_confidence,_generate_explanation,_score_to_qualitative_question","main,generate_meso_cluster",MICRO_ANSWER_GENERATION,ALL_TYPES,"ALL"
_apply_scoring_modality,report_assembly.py,ReportAssembler,"_score_type_a,_score_type_b,_score_type_c,_score_type_d,_score_type_e,_score_type_f,_evaluate_condition","generate_micro_answer",SCORING_ROUTING,ALL_TYPES,"ALL"
_score_type_a,report_assembly.py,ReportAssembler,"_extract_numerical_value,_calculate_confidence","_apply_scoring_modality",BAYESIAN_SCORING,TYPE_A,"D1,D2,D3,D4,D5"
_score_type_b,report_assembly.py,ReportAssembler,"_evaluate_condition,_calculate_confidence","_apply_scoring_modality",DAG_SCORING,TYPE_B,"D2,D3,D4,D6"
_score_type_c,report_assembly.py,ReportAssembler,"_extract_numerical_value,_calculate_confidence","_apply_scoring_modality",COHERENCE_SCORING,TYPE_C,"D1,D2,D4,D6"
_score_type_d,report_assembly.py,ReportAssembler,"_extract_pattern_matches,_calculate_confidence","_apply_scoring_modality",PATTERN_DENSITY_SCORING,TYPE_D,"D1,D2,D3,D4,D5,D6"
_score_type_e,report_assembly.py,ReportAssembler,"_extract_numerical_value,_calculate_confidence","_apply_scoring_modality",FINANCIAL_SCORING,TYPE_E,"D1,D3"
_score_type_f,report_assembly.py,ReportAssembler,"_evaluate_condition,_calculate_confidence","_apply_scoring_modality",BEACH_TEST_SCORING,TYPE_F,"D2,D4,D5,D6"
_generate_explanation,report_assembly.py,ReportAssembler,"_synthesize_evidence,_extract_evidence_excerpts","generate_micro_answer,generate_meso_cluster,generate_macro_convergence",EXPLANATION_GENERATION,ALL_TYPES,"ALL"
generate_meso_cluster,report_assembly.py,ReportAssembler,"_calculate_dimension_scores,_identify_strengths,_identify_weaknesses,_generate_cluster_recommendations,_assess_evidence_quality","main,generate_macro_convergence",MESO_CLUSTER_GENERATION,ALL_TYPES,"ALL"
generate_macro_convergence,report_assembly.py,ReportAssembler,"_calculate_dimension_convergence,_calculate_policy_area_convergence,_perform_gap_analysis,_identify_critical_gaps,_generate_strategic_recommendations,_generate_implementation_roadmap,_classify_plan","main",MACRO_CONVERGENCE_GENERATION,ALL_TYPES,"ALL"
_perform_gap_analysis,report_assembly.py,ReportAssembler,"_identify_critical_gaps,_calculate_dimension_convergence","generate_macro_convergence",GAP_ANALYSIS,ALL_TYPES,"ALL"
_generate_strategic_recommendations,report_assembly.py,ReportAssembler,"_identify_critical_gaps,_generate_implementation_roadmap","generate_macro_convergence",STRATEGIC_RECOMMENDATIONS,ALL_TYPES,"ALL"

Dimension,Primary_Components,Secondary_Components,Method_Count,Modalities_Used,Complexity_Score
D1_Insumos,"PDETMunicipalPlanAnalyzer,PolicyAnalysisEmbedder,IndustrialPolicyProcessor","SemanticAnalyzer,PolicyContradictionDetector",131,"TYPE_D,TYPE_A,TYPE_E,TYPE_C",MEDIUM
D2_Actividades,"CDAFFramework,PolicyContradictionDetector,IndustrialPolicyProcessor","SemanticAnalyzer,TeoriaCambio,PDETMunicipalPlanAnalyzer",158,"TYPE_D,TYPE_F,TYPE_B,TYPE_A,TYPE_C",HIGH
D3_Productos,"PDETMunicipalPlanAnalyzer,PolicyAnalysisEmbedder,IndustrialPolicyProcessor","SemanticAnalyzer",98,"TYPE_D,TYPE_A,TYPE_E,TYPE_B",MEDIUM
D4_Resultados,"CDAFFramework,PDETMunicipalPlanAnalyzer,PolicyAnalysisEmbedder","IndustrialPolicyProcessor,PolicyContradictionDetector",142,"TYPE_D,TYPE_F,TYPE_A,TYPE_C,TYPE_B",HIGH
D5_Impactos,"CDAFFramework,PolicyAnalysisEmbedder,IndustrialPolicyProcessor",NONE,87,"TYPE_D,TYPE_F,TYPE_C,TYPE_A",MEDIUM
D6_Causalidad,"TeoriaCambio,CDAFFramework,PDETMunicipalPlanAnalyzer,PolicyContradictionDetector","PolicyAnalysisEmbedder,IndustrialPolicyProcessor",189,"TYPE_B,TYPE_F,TYPE_A,TYPE_C",VERY_HIGH

Artifact,Producer,Consumer,Schema_Required,Validation_Level,Size_Estimate_KB
FinancialArtifact,financiero_viabilidad_tablas.py,report_assembly.py,YES,STRICT,150
SemanticArtifact,Analyzer_one.py,report_assembly.py,YES,STRICT,80
ContradictionArtifact,contradiction_deteccion.py,report_assembly.py,YES,STRICT,120
EmbeddingArtifact,embedding_policy.py,report_assembly.py,YES,STRICT,200
TeoriaCambioArtifact,teoria_cambio.py,report_assembly.py,YES,STRICT,60
CDAFArtifact,dereck_beach.py,report_assembly.py,YES,STRICT,250
ProcessorArtifact,policy_processor.py,report_assembly.py,YES,STRICT,100
