name: Core Module Boundary Enforcement
permissions:
  contents: read

on:
  pull_request:
  push:
    branches: [ main, develop, copilot/** ]

jobs:
  boundary-check:
    name: Check Core Module Boundaries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Scan for __main__ blocks in core modules
      run: |
        echo "Checking for __main__ blocks in core modules..."
        
        # Check each core module
        for file in Analyzer_one.py dereck_beach.py financiero_viabilidad_tablas.py \
                    teoria_cambio.py contradiction_deteccion.py embedding_policy.py \
                    semantic_chunking_policy.py; do
          if [ -f "$file" ]; then
            if grep -q 'if __name__ == "__main__"' "$file"; then
              echo "❌ ERROR: $file contains __main__ block"
              exit 1
            fi
          fi
        done
        
        echo "✅ No __main__ blocks found in core modules"
    
    - name: Run boundary violation scanner
      run: |
        echo "Running boundary scanner on core modules..."
        
        # Create a temporary directory with core modules for scanning
        mkdir -p /tmp/core_scan
        for file in Analyzer_one.py dereck_beach.py financiero_viabilidad_tablas.py \
                    teoria_cambio.py contradiction_deteccion.py embedding_policy.py \
                    semantic_chunking_policy.py policy_processor.py; do
          if [ -f "$file" ]; then
            cp "$file" /tmp/core_scan/
          fi
        done
        
        # Run scanner (informational for now, will enforce once I/O is migrated)
        if python tools/scan_boundaries.py /tmp/core_scan/ || true; then
          echo "Boundary scan complete (informational only)"
        fi
    
    - name: Verify contract definitions exist
      run: |
        echo "Checking for contract definitions..."
        
        if [ ! -f "core_contracts.py" ]; then
          echo "❌ ERROR: core_contracts.py not found"
          exit 1
        fi
        
        # Verify contracts file is valid Python
        python -m py_compile core_contracts.py
        
        echo "✅ Contract definitions are valid"
    
    - name: Test core modules can be parsed
      run: |
        echo "Verifying syntax of core modules..."
        
        for file in Analyzer_one.py dereck_beach.py financiero_viabilidad_tablas.py \
                    teoria_cambio.py contradiction_deteccion.py embedding_policy.py \
                    semantic_chunking_policy.py policy_processor.py; do
          if [ -f "$file" ]; then
            echo "Checking $file..."
            python -m py_compile "$file"
          fi
        done
        
        echo "✅ All core modules have valid syntax"

  test-suite:
    name: Run Boundary Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
    
    - name: Run boundary enforcement tests
      run: |
        # Run boundary tests if they exist
        if [ -f "tests/test_boundaries.py" ]; then
          pytest tests/test_boundaries.py -v --tb=short || true
        else
          echo "Boundary tests not found (skipping)"
        fi
    
    - name: Run semantic chunking bug tests
      run: |
        # Run semantic chunking tests if they exist
        if [ -f "tests/test_semantic_chunking_bug.py" ]; then
          pytest tests/test_semantic_chunking_bug.py -v --tb=short
        else
          echo "Semantic chunking tests not found (skipping)"
        fi
